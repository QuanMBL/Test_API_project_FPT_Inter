version: '3.8'

services:
  user-api:
    build: ./api1
    container_name: user-api-container
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=userapi.settings
    volumes:
      - ./api1:/app
    networks:
      - api-network
    depends_on:
      - mongodb

  product-api:
    build: ./api2
    container_name: product-api-container
    ports:
      - "8001:8001"
    environment:
      - DJANGO_SETTINGS_MODULE=productapi.settings
    volumes:
      - ./api2:/app
    networks:
      - api-network
    depends_on:
      - mongodb

  order-api:
    build: ./api3
    container_name: order-api-container
    ports:
      - "8002:8002"
    environment:
      - DJANGO_SETTINGS_MODULE=orderapi.settings
    volumes:
      - ./api3:/app
    networks:
      - api-network
    depends_on:
      - mongodb

  payment-api:
    build: ./api4
    container_name: payment-api-container
    ports:
      - "8003:8003"
    environment:
      - DJANGO_SETTINGS_MODULE=paymentapi.settings
    volumes:
      - ./api4:/app
    networks:
      - api-network
    depends_on:
      - mongodb

  mongodb:
    image: mongo:7.0
    container_name: mongodb-container
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
    volumes:
      - mongodb_data:/data/db
    networks:
      - api-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-container
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - api-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-container
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - api-network
    depends_on:
      - prometheus

volumes:
  mongodb_data:
  prometheus_data:
  grafana_data:

networks:
  api-network:
    driver: bridge
