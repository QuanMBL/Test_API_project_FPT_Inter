#!/usr/bin/env python3
"""
Script x√≥a dashboard b·∫±ng API admin
"""

import requests
import json
import sys

# C·∫•u h√¨nh Grafana
GRAFANA_URL = "http://localhost:3000"
GRAFANA_USER = "admin"
GRAFANA_PASSWORD = "admin123"

# Dashboard c·∫ßn gi·ªØ l·∫°i
KEEP_DASHBOARD = "all_4api_1_v2 - Dashboard t·ªïng quan 4 API Services"

def get_all_dashboards():
    """L·∫•y t·∫•t c·∫£ dashboard"""
    try:
        response = requests.get(
            f"{GRAFANA_URL}/api/search?type=dash-db",
            auth=(GRAFANA_USER, GRAFANA_PASSWORD),
            timeout=10
        )
        
        if response.status_code == 200:
            return response.json()
        else:
            print(f"‚ùå L·ªói l·∫•y danh s√°ch dashboard: {response.status_code}")
            return []
    except Exception as e:
        print(f"‚ùå L·ªói k·∫øt n·ªëi: {e}")
        return []

def admin_delete_dashboard(dashboard_uid):
    """X√≥a dashboard b·∫±ng API admin"""
    try:
        # Th·ª≠ x√≥a b·∫±ng API admin v·ªõi force
        delete_url = f"{GRAFANA_URL}/api/dashboards/uid/{dashboard_uid}"
        
        headers = {
            "Content-Type": "application/json",
            "Accept": "application/json",
            "X-Grafana-Org-Id": "1"
        }
        
        # Th·ª≠ v·ªõi force parameter
        params = {"force": "true"}
        
        response = requests.delete(
            delete_url,
            auth=(GRAFANA_USER, GRAFANA_PASSWORD),
            headers=headers,
            params=params,
            timeout=10
        )
        
        print(f"   Status: {response.status_code}")
        if response.status_code == 200:
            print(f"   ‚úÖ X√≥a th√†nh c√¥ng")
            return True
        else:
            print(f"   ‚ùå Th·∫•t b·∫°i: {response.text}")
            return False
        
    except Exception as e:
        print(f"   ‚ùå L·ªói: {e}")
        return False

def main():
    """H√†m ch√≠nh"""
    print("üßπ Script X√≥a Dashboard B·∫±ng API Admin")
    print("=" * 50)
    
    # L·∫•y t·∫•t c·∫£ dashboard
    dashboards = get_all_dashboards()
    if not dashboards:
        print("‚ùå Kh√¥ng th·ªÉ l·∫•y danh s√°ch dashboard")
        sys.exit(1)
    
    print(f"üìä T√¨m th·∫•y {len(dashboards)} dashboard")
    
    # Ph√¢n lo·∫°i dashboard
    keep_dashboard = None
    delete_dashboards = []
    
    for dashboard in dashboards:
        title = dashboard.get('title', 'Unknown')
        if title == KEEP_DASHBOARD:
            keep_dashboard = dashboard
        else:
            delete_dashboards.append(dashboard)
    
    # Hi·ªÉn th·ªã k·∫øt qu·∫£
    if keep_dashboard:
        print(f"\nüìã Dashboard s·∫Ω GI·ªÆ L·∫†I (1):")
        print(f"   ‚úÖ {keep_dashboard['title']} (ID: {keep_dashboard['id']})")
    else:
        print(f"\n‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y dashboard: {KEEP_DASHBOARD}")
    
    print(f"\nüóëÔ∏è Dashboard s·∫Ω X√ìA ({len(delete_dashboards)}):")
    for dash in delete_dashboards:
        print(f"   ‚ùå {dash['title']} (ID: {dash['id']}, UID: {dash['uid']})")
    
    if not delete_dashboards:
        print("\n‚úÖ Kh√¥ng c√≥ dashboard n√†o c·∫ßn x√≥a!")
        return
    
    # X√°c nh·∫≠n
    confirm = input(f"\nB·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a {len(delete_dashboards)} dashboard? (yes/no): ")
    
    if confirm.lower() != 'yes':
        print("‚ùå H·ªßy b·ªè thao t√°c")
        return
    
    # Th·ª±c hi·ªán x√≥a
    removed_count = 0
    print(f"\nüóëÔ∏è ƒêang x√≥a {len(delete_dashboards)} dashboard...")
    
    for dash in delete_dashboards:
        print(f"\nüîÑ X√≥a: {dash['title']} (UID: {dash['uid']})")
        if admin_delete_dashboard(dash['uid']):
            removed_count += 1
            print(f"   ‚úÖ ƒê√£ x√≥a: {dash['title']}")
        else:
            print(f"   ‚ùå Kh√¥ng th·ªÉ x√≥a: {dash['title']}")
    
    print(f"\nüìä K·∫øt qu·∫£: ƒê√£ x√≥a {removed_count}/{len(delete_dashboards)} dashboard")
    
    if keep_dashboard:
        print(f"‚úÖ Gi·ªØ l·∫°i dashboard: {keep_dashboard['title']}")
    
    print("\nüîó Truy c·∫≠p Grafana: http://localhost:3000")
    print("üë§ ƒêƒÉng nh·∫≠p: admin / admin123")

if __name__ == "__main__":
    main()
